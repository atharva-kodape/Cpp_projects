// SnakeTry2.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <conio.h>
#include <Windows.h>

using namespace std;

bool gameOver;
const int width = 40;
const int height = 20;
int headX, headY;
int fruitX, fruitY;
int score;
int tailX[100], tailY[100];
int nTail = 0;
enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN };
eDirection dir;

void setup()
{
	gameOver = false;
	dir = STOP;
	headX = width / 2;
	headY = height / 2;
	fruitX = rand() % width;
	fruitY = rand() % height;
	score = 0;
}

void draw()
{
	system("cls");
	for (int i = 0; i < width+2; i++)
	{
		cout << "#";
	}
	cout << "   SCORE:  " << score;
	cout << endl;

	for (int i = 0; i < height; i++)
	{
		for (int j = 0; j < width; j++)
		{
			if (j == 0) cout << "#";
			
			if (i == headY && j == headX) cout << "O";
			else if (i == fruitY && j == fruitX) cout << "F";
			else
			{
				bool printo = false;
				for (int k = 0; k < nTail; k++)
				{
					if (tailX[k] == j && tailY[k] == i)
					{
						cout << "*";
						printo = true;
					}
				}
				if (!printo)
				{
					cout << " ";
				}
			}
			if (j == width - 1) cout << "#";
		}
		cout << endl;
	}
	for (int i = 0; i < width+2; i++)
	{
		cout << "#";
	}
}

/*
    W
  A   D
    S
*/
void input()
{
	if (_kbhit())
	{
		switch (_getch())
		{
		case 'w':
			dir = UP;
			break;
		case 'a':
			dir = LEFT;
			break;
		case 's':
			dir = DOWN;
			break;
		case 'd':
			dir = RIGHT;
			break;
		case 'x':
			gameOver = true;
			break;
		}
	}
}

void logic()
{
	int prevX = tailX[0];
	int prevY = tailY[0];
	int prev2X, prev2Y;
	tailX[0] = headX;
	tailY[0] = headY;

	for (int i = 1; i < nTail; i++)
	{
		prev2X = tailX[i];
		prev2Y = tailY[i];
		tailX[i] = prevX;
		tailY[i] = prevY;
		prevX = prev2X;
		prevY = prev2Y;
	}

	switch (dir)
	{
	case LEFT:
		headX--;
		break;
	case RIGHT:
		headX++;
		break;
	case UP:
		headY--;
		break;
	case DOWN:
		headY++;
		break;
	}

	if (headX < 0 || headX > width || headY < 0 || headY > height)
	{
		cout << endl << "Your Final Score is: " << score;
		Sleep(10);
		gameOver = true;
	}
		while (_kbhit())
		{
			Sleep(100);
			gameOver = true;
		}
		for (int i = 0; i < nTail; i++)
		{
			if (tailX[i] == headX && tailY[i] == headY)
			{
				Sleep(100);
				gameOver = true;
			}
		}

	if (headX == fruitX && headY == fruitY)
	{
		nTail++;
		score += 10;
		fruitX = rand() % width;
		fruitY = rand() % height;
	}
}

int main()
{
	setup();
	while (!gameOver)
	{
		draw();
		input();
		logic();
	}

	return 0;
}
